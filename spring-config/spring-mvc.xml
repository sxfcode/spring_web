<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-init-method="init" default-destroy-method="destroy">
	<!-- 配置资源访问路径,将js目录下的资源映射到/public-resources/目录,即通过/public-resources/xx路径来访问位于js目录下的文件 -->
	<mvc:resources mapping="/public-resources/**" location="/js/" />
	
	<!-- 配置默认handler,可以用来处理静态资源的访问 -->
	<mvc:default-servlet-handler />
	
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/*" />
			<bean id="userInterceptor" class="org.sxf.interceptor.user.UserInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- 配置viewResovler viewResolver可以链式处理，通过order指定顺序 -->
	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>
</beans>